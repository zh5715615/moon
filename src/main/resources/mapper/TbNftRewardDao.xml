<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tcbv.zhaohui.moon.dao.TbNftRewardDao">
 
    <resultMap type="tcbv.zhaohui.moon.entity.TbNftReward" id="TbNftRewardMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="userAddress" column="user_address" jdbcType="VARCHAR"/>
        <result property="nftAmount" column="nft_amount" jdbcType="INTEGER"/>
        <result property="rewardAmount" column="reward_amount" jdbcType="NUMERIC"/>
        <result property="txHash" column="tx_hash" jdbcType="VARCHAR"/>
        <result property="cycle" column="cycle" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>
 
    <!--查询单个-->
    <select id="queryById" resultMap="TbNftRewardMap">
        select id, user_address, nft_amount, reward_amount, tx_hash, cycle, create_time 
        from tb_nft_reward
        where id = #{id}
    </select>
 
    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="TbNftRewardMap">
        select  id, user_address, nft_amount, reward_amount, tx_hash, cycle, create_time
        from tb_nft_reward
        <where>
            <if test="entity.id != null">
                and id = #{entity.id}
            </if>
            <if test="entity.userAddress != null and entity.userAddress != ''">
                and user_address = #{entity.userAddress}
            </if>
            <if test="entity.nftAmount != null">
                and nft_amount = #{entity.nftAmount}
            </if>
            <if test="entity.rewardAmount != null">
                and reward_amount = #{entity.rewardAmount}
            </if>
            <if test="entity.txHash != null and entity.txHash != ''">
                and tx_hash = #{entity.txHash}
            </if>
            <if test="entity.cycle != null">
                and cycle = #{entity.cycle}
            </if>
            <if test="entity.createTime != null">
                and create_time = #{entity.createTime}
            </if>
        </where>
        <if test="pageable.sort != null">
            ORDER BY
            <foreach collection="pageable.sort" item="order" separator=",">
                ${order.property} ${order.direction}
            </foreach>
	    </if>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>
 
    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from tb_nft_reward
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userAddress != null and userAddress != ''">
                and user_address = #{userAddress}
            </if>
            <if test="nftAmount != null">
                and nft_amount = #{nftAmount}
            </if>
            <if test="rewardAmount != null">
                and reward_amount = #{rewardAmount}
            </if>
            <if test="txHash != null and txHash != ''">
                and tx_hash = #{txHash}
            </if>
            <if test="cycle != null">
                and cycle = #{cycle}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
        </where>
    </select>
    <select id="queryByAddress" resultType="tcbv.zhaohui.moon.entity.TbNftReward">
        select id, user_address, nft_amount, reward_amount, tx_hash, cycle, create_time
        from tb_nft_reward
        where cycle = #{cycle} and user_address = #{address}
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into tb_nft_reward(id, user_address, nft_amount, reward_amount, tx_hash, cycle, create_time)
        values (#{id}, #{userAddress}, #{nftAmount}, #{rewardAmount}, #{txHash}, #{cycle}, #{createTime})
    </insert>
 
    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into tb_nft_reward(id, user_address, nft_amount, reward_amount, tx_hash, cycle, create_time)
        values
        <foreach collection="entities" item="entity" separator=",">
        (
           <choose>
                <when test="entity.visitFrom != null">
                 #{entity.id}, 
                </when>
                <otherwise>'', </otherwise>
          </choose>
           <choose>
                <when test="entity.visitFrom != null">
                 #{entity.userAddress}, 
                </when>
                <otherwise>'', </otherwise>
          </choose>
           <choose>
                <when test="entity.visitFrom != null">
                 #{entity.nftAmount}, 
                </when>
                <otherwise>'', </otherwise>
          </choose>
           <choose>
                <when test="entity.visitFrom != null">
                 #{entity.rewardAmount}, 
                </when>
                <otherwise>'', </otherwise>
          </choose>
           <choose>
                <when test="entity.visitFrom != null">
                 #{entity.txHash}, 
                </when>
                <otherwise>'', </otherwise>
          </choose>
           <choose>
                <when test="entity.visitFrom != null">
                 #{entity.cycle}, 
                </when>
                <otherwise>'', </otherwise>
          </choose>
           <choose>
                <when test="entity.visitFrom != null">
                 #{entity.createTime}
                </when>
                <otherwise>''</otherwise>
          </choose>
         )
        </foreach>
    </insert>
 
    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into tb_nft_reward(id, user_address, nft_amount, reward_amount, tx_hash, cycle, create_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.id}, #{entity.userAddress}, #{entity.nftAmount}, #{entity.rewardAmount}, #{entity.txHash}, #{entity.cycle}, #{entity.createTime})
        </foreach>
        on duplicate key update
         id = values(id),
         user_address = values(user_address),
         nft_amount = values(nft_amount),
         reward_amount = values(reward_amount),
         tx_hash = values(tx_hash),
         cycle = values(cycle),
         create_time = values(create_time) 
    </insert>
 
    <!--通过主键修改数据-->
    <update id="update">
        update tb_nft_reward
        <set>
            <if test="userAddress != null and userAddress != ''">
                user_address = #{userAddress},
            </if>
            <if test="nftAmount != null">
                nft_amount = #{nftAmount},
            </if>
            <if test="rewardAmount != null">
                reward_amount = #{rewardAmount},
            </if>
            <if test="txHash != null and txHash != ''">
                tx_hash = #{txHash},
            </if>
            <if test="cycle != null">
                cycle = #{cycle},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
        </set>
        where id = #{id}
    </update>
 
    <!--通过主键删除-->
    <delete id="deleteById">
        delete from tb_nft_reward where id = #{id}
    </delete>
    <delete id="deleteByCycle">
        delete from tb_nft_reward where cycle = #{cycle}
    </delete>

</mapper>
